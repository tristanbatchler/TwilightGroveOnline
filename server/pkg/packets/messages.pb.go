// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.0
// 	protoc        v5.28.0
// source: messages.proto

package packets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Harvestable int32

const (
	Harvestable_NONE  Harvestable = 0
	Harvestable_SHRUB Harvestable = 1
	Harvestable_ORE   Harvestable = 2
)

// Enum value maps for Harvestable.
var (
	Harvestable_name = map[int32]string{
		0: "NONE",
		1: "SHRUB",
		2: "ORE",
	}
	Harvestable_value = map[string]int32{
		"NONE":  0,
		"SHRUB": 1,
		"ORE":   2,
	}
)

func (x Harvestable) Enum() *Harvestable {
	p := new(Harvestable)
	*p = x
	return p
}

func (x Harvestable) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Harvestable) Descriptor() protoreflect.EnumDescriptor {
	return file_messages_proto_enumTypes[0].Descriptor()
}

func (Harvestable) Type() protoreflect.EnumType {
	return &file_messages_proto_enumTypes[0]
}

func (x Harvestable) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Harvestable.Descriptor instead.
func (Harvestable) EnumDescriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

type Response struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Success bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Types that are valid to be assigned to OptionalMsg:
	//
	//	*Response_Msg
	OptionalMsg   isResponse_OptionalMsg `protobuf_oneof:"optional_msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Response) Reset() {
	*x = Response{}
	mi := &file_messages_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{0}
}

func (x *Response) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *Response) GetOptionalMsg() isResponse_OptionalMsg {
	if x != nil {
		return x.OptionalMsg
	}
	return nil
}

func (x *Response) GetMsg() string {
	if x != nil {
		if x, ok := x.OptionalMsg.(*Response_Msg); ok {
			return x.Msg
		}
	}
	return ""
}

type isResponse_OptionalMsg interface {
	isResponse_OptionalMsg()
}

type Response_Msg struct {
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3,oneof"`
}

func (*Response_Msg) isResponse_OptionalMsg() {}

type ClientId struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientId) Reset() {
	*x = ClientId{}
	mi := &file_messages_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientId) ProtoMessage() {}

func (x *ClientId) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientId.ProtoReflect.Descriptor instead.
func (*ClientId) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{1}
}

func (x *ClientId) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type LoginRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	mi := &file_messages_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	mi := &file_messages_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type RegisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	SpriteRegionX int32                  `protobuf:"varint,3,opt,name=sprite_region_x,json=spriteRegionX,proto3" json:"sprite_region_x,omitempty"`
	SpriteRegionY int32                  `protobuf:"varint,4,opt,name=sprite_region_y,json=spriteRegionY,proto3" json:"sprite_region_y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_messages_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RegisterRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *RegisterRequest) GetSpriteRegionX() int32 {
	if x != nil {
		return x.SpriteRegionX
	}
	return 0
}

func (x *RegisterRequest) GetSpriteRegionY() int32 {
	if x != nil {
		return x.SpriteRegionY
	}
	return 0
}

type RegisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_messages_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type Logout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Logout) Reset() {
	*x = Logout{}
	mi := &file_messages_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Logout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Logout) ProtoMessage() {}

func (x *Logout) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Logout.ProtoReflect.Descriptor instead.
func (*Logout) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{6}
}

type Chat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chat) Reset() {
	*x = Chat{}
	mi := &file_messages_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chat) ProtoMessage() {}

func (x *Chat) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chat.ProtoReflect.Descriptor instead.
func (*Chat) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{7}
}

func (x *Chat) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Yell struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SenderName    string                 `protobuf:"bytes,1,opt,name=sender_name,json=senderName,proto3" json:"sender_name,omitempty"`
	Msg           string                 `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Yell) Reset() {
	*x = Yell{}
	mi := &file_messages_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Yell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Yell) ProtoMessage() {}

func (x *Yell) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Yell.ProtoReflect.Descriptor instead.
func (*Yell) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{8}
}

func (x *Yell) GetSenderName() string {
	if x != nil {
		return x.SenderName
	}
	return ""
}

func (x *Yell) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Actor struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X             int32                  `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	Name          string                 `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	SpriteRegionX int32                  `protobuf:"varint,6,opt,name=sprite_region_x,json=spriteRegionX,proto3" json:"sprite_region_x,omitempty"`
	SpriteRegionY int32                  `protobuf:"varint,7,opt,name=sprite_region_y,json=spriteRegionY,proto3" json:"sprite_region_y,omitempty"`
	IsVip         bool                   `protobuf:"varint,8,opt,name=is_vip,json=isVip,proto3" json:"is_vip,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Actor) Reset() {
	*x = Actor{}
	mi := &file_messages_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{9}
}

func (x *Actor) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Actor) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Actor) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Actor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Actor) GetSpriteRegionX() int32 {
	if x != nil {
		return x.SpriteRegionX
	}
	return 0
}

func (x *Actor) GetSpriteRegionY() int32 {
	if x != nil {
		return x.SpriteRegionY
	}
	return 0
}

func (x *Actor) GetIsVip() bool {
	if x != nil {
		return x.IsVip
	}
	return false
}

type ActorMove struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Dx            int32                  `protobuf:"varint,2,opt,name=dx,proto3" json:"dx,omitempty"`
	Dy            int32                  `protobuf:"varint,3,opt,name=dy,proto3" json:"dy,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ActorMove) Reset() {
	*x = ActorMove{}
	mi := &file_messages_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActorMove) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorMove) ProtoMessage() {}

func (x *ActorMove) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorMove.ProtoReflect.Descriptor instead.
func (*ActorMove) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{10}
}

func (x *ActorMove) GetDx() int32 {
	if x != nil {
		return x.Dx
	}
	return 0
}

func (x *ActorMove) GetDy() int32 {
	if x != nil {
		return x.Dy
	}
	return 0
}

type Motd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Motd) Reset() {
	*x = Motd{}
	mi := &file_messages_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Motd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Motd) ProtoMessage() {}

func (x *Motd) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Motd.ProtoReflect.Descriptor instead.
func (*Motd) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{11}
}

func (x *Motd) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type Disconnect struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Disconnect) Reset() {
	*x = Disconnect{}
	mi := &file_messages_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Disconnect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Disconnect) ProtoMessage() {}

func (x *Disconnect) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Disconnect.ProtoReflect.Descriptor instead.
func (*Disconnect) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{12}
}

type AdminLoginGranted struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminLoginGranted) Reset() {
	*x = AdminLoginGranted{}
	mi := &file_messages_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminLoginGranted) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminLoginGranted) ProtoMessage() {}

func (x *AdminLoginGranted) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminLoginGranted.ProtoReflect.Descriptor instead.
func (*AdminLoginGranted) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{13}
}

type SqlQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Query         string                 `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlQuery) Reset() {
	*x = SqlQuery{}
	mi := &file_messages_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlQuery) ProtoMessage() {}

func (x *SqlQuery) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlQuery.ProtoReflect.Descriptor instead.
func (*SqlQuery) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{14}
}

func (x *SqlQuery) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type SqlRow struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Values        []string               `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlRow) Reset() {
	*x = SqlRow{}
	mi := &file_messages_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlRow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlRow) ProtoMessage() {}

func (x *SqlRow) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlRow.ProtoReflect.Descriptor instead.
func (*SqlRow) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{15}
}

func (x *SqlRow) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type SqlResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	Columns       []string               `protobuf:"bytes,2,rep,name=columns,proto3" json:"columns,omitempty"`
	Rows          []*SqlRow              `protobuf:"bytes,3,rep,name=rows,proto3" json:"rows,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SqlResponse) Reset() {
	*x = SqlResponse{}
	mi := &file_messages_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SqlResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SqlResponse) ProtoMessage() {}

func (x *SqlResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SqlResponse.ProtoReflect.Descriptor instead.
func (*SqlResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{16}
}

func (x *SqlResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

func (x *SqlResponse) GetColumns() []string {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *SqlResponse) GetRows() []*SqlRow {
	if x != nil {
		return x.Rows
	}
	return nil
}

type CollisionPoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	X             int32                  `protobuf:"varint,1,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,2,opt,name=y,proto3" json:"y,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollisionPoint) Reset() {
	*x = CollisionPoint{}
	mi := &file_messages_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollisionPoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollisionPoint) ProtoMessage() {}

func (x *CollisionPoint) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollisionPoint.ProtoReflect.Descriptor instead.
func (*CollisionPoint) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{17}
}

func (x *CollisionPoint) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CollisionPoint) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Shrub struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Strength      int32                  `protobuf:"varint,4,opt,name=strength,proto3" json:"strength,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Shrub) Reset() {
	*x = Shrub{}
	mi := &file_messages_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Shrub) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Shrub) ProtoMessage() {}

func (x *Shrub) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Shrub.ProtoReflect.Descriptor instead.
func (*Shrub) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{18}
}

func (x *Shrub) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Shrub) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Shrub) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Shrub) GetStrength() int32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

type Ore struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	X             int32                  `protobuf:"varint,2,opt,name=x,proto3" json:"x,omitempty"`
	Y             int32                  `protobuf:"varint,3,opt,name=y,proto3" json:"y,omitempty"`
	Strength      int32                  `protobuf:"varint,4,opt,name=strength,proto3" json:"strength,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Ore) Reset() {
	*x = Ore{}
	mi := &file_messages_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Ore) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ore) ProtoMessage() {}

func (x *Ore) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ore.ProtoReflect.Descriptor instead.
func (*Ore) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{19}
}

func (x *Ore) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Ore) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Ore) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Ore) GetStrength() int32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

type Door struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	Id                        uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	DestinationLevelGdResPath string                 `protobuf:"bytes,2,opt,name=destination_level_gd_res_path,json=destinationLevelGdResPath,proto3" json:"destination_level_gd_res_path,omitempty"`
	DestinationX              int32                  `protobuf:"varint,3,opt,name=destination_x,json=destinationX,proto3" json:"destination_x,omitempty"`
	DestinationY              int32                  `protobuf:"varint,4,opt,name=destination_y,json=destinationY,proto3" json:"destination_y,omitempty"`
	X                         int32                  `protobuf:"varint,5,opt,name=x,proto3" json:"x,omitempty"`
	Y                         int32                  `protobuf:"varint,6,opt,name=y,proto3" json:"y,omitempty"`
	KeyId                     int32                  `protobuf:"varint,7,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *Door) Reset() {
	*x = Door{}
	mi := &file_messages_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Door) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Door) ProtoMessage() {}

func (x *Door) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Door.ProtoReflect.Descriptor instead.
func (*Door) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{20}
}

func (x *Door) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Door) GetDestinationLevelGdResPath() string {
	if x != nil {
		return x.DestinationLevelGdResPath
	}
	return ""
}

func (x *Door) GetDestinationX() int32 {
	if x != nil {
		return x.DestinationX
	}
	return 0
}

func (x *Door) GetDestinationY() int32 {
	if x != nil {
		return x.DestinationY
	}
	return 0
}

func (x *Door) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Door) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Door) GetKeyId() int32 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type ToolProps struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strength      int32                  `protobuf:"varint,1,opt,name=strength,proto3" json:"strength,omitempty"`
	LevelRequired int32                  `protobuf:"varint,2,opt,name=level_required,json=levelRequired,proto3" json:"level_required,omitempty"`
	Harvests      Harvestable            `protobuf:"varint,3,opt,name=harvests,proto3,enum=messages.Harvestable" json:"harvests,omitempty"`
	KeyId         int32                  `protobuf:"varint,4,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ToolProps) Reset() {
	*x = ToolProps{}
	mi := &file_messages_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ToolProps) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToolProps) ProtoMessage() {}

func (x *ToolProps) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToolProps.ProtoReflect.Descriptor instead.
func (*ToolProps) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{21}
}

func (x *ToolProps) GetStrength() int32 {
	if x != nil {
		return x.Strength
	}
	return 0
}

func (x *ToolProps) GetLevelRequired() int32 {
	if x != nil {
		return x.LevelRequired
	}
	return 0
}

func (x *ToolProps) GetHarvests() Harvestable {
	if x != nil {
		return x.Harvests
	}
	return Harvestable_NONE
}

func (x *ToolProps) GetKeyId() int32 {
	if x != nil {
		return x.KeyId
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Value         int32                  `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	SpriteRegionX int32                  `protobuf:"varint,4,opt,name=sprite_region_x,json=spriteRegionX,proto3" json:"sprite_region_x,omitempty"`
	SpriteRegionY int32                  `protobuf:"varint,5,opt,name=sprite_region_y,json=spriteRegionY,proto3" json:"sprite_region_y,omitempty"`
	ToolProps     *ToolProps             `protobuf:"bytes,6,opt,name=tool_props,json=toolProps,proto3" json:"tool_props,omitempty"`
	GrantsVip     bool                   `protobuf:"varint,7,opt,name=grants_vip,json=grantsVip,proto3" json:"grants_vip,omitempty"`
	Tradeable     bool                   `protobuf:"varint,8,opt,name=tradeable,proto3" json:"tradeable,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Item) Reset() {
	*x = Item{}
	mi := &file_messages_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{22}
}

func (x *Item) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Item) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Item) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *Item) GetSpriteRegionX() int32 {
	if x != nil {
		return x.SpriteRegionX
	}
	return 0
}

func (x *Item) GetSpriteRegionY() int32 {
	if x != nil {
		return x.SpriteRegionY
	}
	return 0
}

func (x *Item) GetToolProps() *ToolProps {
	if x != nil {
		return x.ToolProps
	}
	return nil
}

func (x *Item) GetGrantsVip() bool {
	if x != nil {
		return x.GrantsVip
	}
	return false
}

func (x *Item) GetTradeable() bool {
	if x != nil {
		return x.Tradeable
	}
	return false
}

type GroundItem struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             uint32                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Item           *Item                  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	X              int32                  `protobuf:"varint,3,opt,name=x,proto3" json:"x,omitempty"`
	Y              int32                  `protobuf:"varint,4,opt,name=y,proto3" json:"y,omitempty"`
	RespawnSeconds int32                  `protobuf:"varint,5,opt,name=respawn_seconds,json=respawnSeconds,proto3" json:"respawn_seconds,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GroundItem) Reset() {
	*x = GroundItem{}
	mi := &file_messages_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GroundItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GroundItem) ProtoMessage() {}

func (x *GroundItem) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GroundItem.ProtoReflect.Descriptor instead.
func (*GroundItem) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{23}
}

func (x *GroundItem) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GroundItem) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *GroundItem) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *GroundItem) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *GroundItem) GetRespawnSeconds() int32 {
	if x != nil {
		return x.RespawnSeconds
	}
	return 0
}

type LevelUpload struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	GdResPath      string                 `protobuf:"bytes,1,opt,name=gd_res_path,json=gdResPath,proto3" json:"gd_res_path,omitempty"`
	TscnData       []byte                 `protobuf:"bytes,2,opt,name=tscn_data,json=tscnData,proto3" json:"tscn_data,omitempty"`
	CollisionPoint []*CollisionPoint      `protobuf:"bytes,3,rep,name=collision_point,json=collisionPoint,proto3" json:"collision_point,omitempty"`
	Shrub          []*Shrub               `protobuf:"bytes,4,rep,name=shrub,proto3" json:"shrub,omitempty"`
	Ore            []*Ore                 `protobuf:"bytes,5,rep,name=ore,proto3" json:"ore,omitempty"`
	Door           []*Door                `protobuf:"bytes,6,rep,name=door,proto3" json:"door,omitempty"`
	GroundItem     []*GroundItem          `protobuf:"bytes,7,rep,name=ground_item,json=groundItem,proto3" json:"ground_item,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *LevelUpload) Reset() {
	*x = LevelUpload{}
	mi := &file_messages_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelUpload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUpload) ProtoMessage() {}

func (x *LevelUpload) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUpload.ProtoReflect.Descriptor instead.
func (*LevelUpload) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{24}
}

func (x *LevelUpload) GetGdResPath() string {
	if x != nil {
		return x.GdResPath
	}
	return ""
}

func (x *LevelUpload) GetTscnData() []byte {
	if x != nil {
		return x.TscnData
	}
	return nil
}

func (x *LevelUpload) GetCollisionPoint() []*CollisionPoint {
	if x != nil {
		return x.CollisionPoint
	}
	return nil
}

func (x *LevelUpload) GetShrub() []*Shrub {
	if x != nil {
		return x.Shrub
	}
	return nil
}

func (x *LevelUpload) GetOre() []*Ore {
	if x != nil {
		return x.Ore
	}
	return nil
}

func (x *LevelUpload) GetDoor() []*Door {
	if x != nil {
		return x.Door
	}
	return nil
}

func (x *LevelUpload) GetGroundItem() []*GroundItem {
	if x != nil {
		return x.GroundItem
	}
	return nil
}

type LevelUploadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DbLevelId     int32                  `protobuf:"varint,1,opt,name=db_level_id,json=dbLevelId,proto3" json:"db_level_id,omitempty"`
	GdResPath     string                 `protobuf:"bytes,2,opt,name=gd_res_path,json=gdResPath,proto3" json:"gd_res_path,omitempty"`
	Response      *Response              `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelUploadResponse) Reset() {
	*x = LevelUploadResponse{}
	mi := &file_messages_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelUploadResponse) ProtoMessage() {}

func (x *LevelUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelUploadResponse.ProtoReflect.Descriptor instead.
func (*LevelUploadResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{25}
}

func (x *LevelUploadResponse) GetDbLevelId() int32 {
	if x != nil {
		return x.DbLevelId
	}
	return 0
}

func (x *LevelUploadResponse) GetGdResPath() string {
	if x != nil {
		return x.GdResPath
	}
	return ""
}

func (x *LevelUploadResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type LevelDownload struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelDownload) Reset() {
	*x = LevelDownload{}
	mi := &file_messages_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelDownload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelDownload) ProtoMessage() {}

func (x *LevelDownload) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelDownload.ProtoReflect.Descriptor instead.
func (*LevelDownload) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{26}
}

func (x *LevelDownload) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type AdminJoinGameRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminJoinGameRequest) Reset() {
	*x = AdminJoinGameRequest{}
	mi := &file_messages_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminJoinGameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminJoinGameRequest) ProtoMessage() {}

func (x *AdminJoinGameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminJoinGameRequest.ProtoReflect.Descriptor instead.
func (*AdminJoinGameRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{27}
}

type AdminJoinGameResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Response      *Response              `protobuf:"bytes,1,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminJoinGameResponse) Reset() {
	*x = AdminJoinGameResponse{}
	mi := &file_messages_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminJoinGameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminJoinGameResponse) ProtoMessage() {}

func (x *AdminJoinGameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminJoinGameResponse.ProtoReflect.Descriptor instead.
func (*AdminJoinGameResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{28}
}

func (x *AdminJoinGameResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ServerMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Msg           string                 `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerMessage) Reset() {
	*x = ServerMessage{}
	mi := &file_messages_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerMessage) ProtoMessage() {}

func (x *ServerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerMessage.ProtoReflect.Descriptor instead.
func (*ServerMessage) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{29}
}

func (x *ServerMessage) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type PickupGroundItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroundItemId  uint32                 `protobuf:"varint,1,opt,name=ground_item_id,json=groundItemId,proto3" json:"ground_item_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PickupGroundItemRequest) Reset() {
	*x = PickupGroundItemRequest{}
	mi := &file_messages_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickupGroundItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickupGroundItemRequest) ProtoMessage() {}

func (x *PickupGroundItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickupGroundItemRequest.ProtoReflect.Descriptor instead.
func (*PickupGroundItemRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{30}
}

func (x *PickupGroundItemRequest) GetGroundItemId() uint32 {
	if x != nil {
		return x.GroundItemId
	}
	return 0
}

type PickupGroundItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GroundItem    *GroundItem            `protobuf:"bytes,1,opt,name=ground_item,json=groundItem,proto3" json:"ground_item,omitempty"` // TODO: use ID instead of the whole object to save bandwidth
	Response      *Response              `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PickupGroundItemResponse) Reset() {
	*x = PickupGroundItemResponse{}
	mi := &file_messages_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PickupGroundItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PickupGroundItemResponse) ProtoMessage() {}

func (x *PickupGroundItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PickupGroundItemResponse.ProtoReflect.Descriptor instead.
func (*PickupGroundItemResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{31}
}

func (x *PickupGroundItemResponse) GetGroundItem() *GroundItem {
	if x != nil {
		return x.GroundItem
	}
	return nil
}

func (x *PickupGroundItemResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type DropItemRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropItemRequest) Reset() {
	*x = DropItemRequest{}
	mi := &file_messages_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemRequest) ProtoMessage() {}

func (x *DropItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemRequest.ProtoReflect.Descriptor instead.
func (*DropItemRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{32}
}

func (x *DropItemRequest) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *DropItemRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type DropItemResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Response      *Response              `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DropItemResponse) Reset() {
	*x = DropItemResponse{}
	mi := &file_messages_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DropItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DropItemResponse) ProtoMessage() {}

func (x *DropItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DropItemResponse.ProtoReflect.Descriptor instead.
func (*DropItemResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{33}
}

func (x *DropItemResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *DropItemResponse) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *DropItemResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type ItemQuantity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *Item                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	Quantity      int32                  `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ItemQuantity) Reset() {
	*x = ItemQuantity{}
	mi := &file_messages_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ItemQuantity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ItemQuantity) ProtoMessage() {}

func (x *ItemQuantity) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ItemQuantity.ProtoReflect.Descriptor instead.
func (*ItemQuantity) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{34}
}

func (x *ItemQuantity) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *ItemQuantity) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type ActorInventory struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ItemsQuantities []*ItemQuantity        `protobuf:"bytes,1,rep,name=items_quantities,json=itemsQuantities,proto3" json:"items_quantities,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ActorInventory) Reset() {
	*x = ActorInventory{}
	mi := &file_messages_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ActorInventory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActorInventory) ProtoMessage() {}

func (x *ActorInventory) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActorInventory.ProtoReflect.Descriptor instead.
func (*ActorInventory) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{35}
}

func (x *ActorInventory) GetItemsQuantities() []*ItemQuantity {
	if x != nil {
		return x.ItemsQuantities
	}
	return nil
}

type ChopShrubRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShrubId       uint32                 `protobuf:"varint,1,opt,name=shrub_id,json=shrubId,proto3" json:"shrub_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChopShrubRequest) Reset() {
	*x = ChopShrubRequest{}
	mi := &file_messages_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChopShrubRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChopShrubRequest) ProtoMessage() {}

func (x *ChopShrubRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChopShrubRequest.ProtoReflect.Descriptor instead.
func (*ChopShrubRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{36}
}

func (x *ChopShrubRequest) GetShrubId() uint32 {
	if x != nil {
		return x.ShrubId
	}
	return 0
}

type ChopShrubResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ShrubId       uint32                 `protobuf:"varint,1,opt,name=shrub_id,json=shrubId,proto3" json:"shrub_id,omitempty"`
	Response      *Response              `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChopShrubResponse) Reset() {
	*x = ChopShrubResponse{}
	mi := &file_messages_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChopShrubResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChopShrubResponse) ProtoMessage() {}

func (x *ChopShrubResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChopShrubResponse.ProtoReflect.Descriptor instead.
func (*ChopShrubResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{37}
}

func (x *ChopShrubResponse) GetShrubId() uint32 {
	if x != nil {
		return x.ShrubId
	}
	return 0
}

func (x *ChopShrubResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type MineOreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OreId         uint32                 `protobuf:"varint,1,opt,name=ore_id,json=oreId,proto3" json:"ore_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MineOreRequest) Reset() {
	*x = MineOreRequest{}
	mi := &file_messages_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MineOreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MineOreRequest) ProtoMessage() {}

func (x *MineOreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MineOreRequest.ProtoReflect.Descriptor instead.
func (*MineOreRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{38}
}

func (x *MineOreRequest) GetOreId() uint32 {
	if x != nil {
		return x.OreId
	}
	return 0
}

type MineOreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	OreId         uint32                 `protobuf:"varint,1,opt,name=ore_id,json=oreId,proto3" json:"ore_id,omitempty"`
	Response      *Response              `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MineOreResponse) Reset() {
	*x = MineOreResponse{}
	mi := &file_messages_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MineOreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MineOreResponse) ProtoMessage() {}

func (x *MineOreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MineOreResponse.ProtoReflect.Descriptor instead.
func (*MineOreResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{39}
}

func (x *MineOreResponse) GetOreId() uint32 {
	if x != nil {
		return x.OreId
	}
	return 0
}

func (x *MineOreResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type XpReward struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Skill         uint32                 `protobuf:"varint,1,opt,name=skill,proto3" json:"skill,omitempty"`
	Xp            uint32                 `protobuf:"varint,2,opt,name=xp,proto3" json:"xp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *XpReward) Reset() {
	*x = XpReward{}
	mi := &file_messages_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *XpReward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*XpReward) ProtoMessage() {}

func (x *XpReward) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use XpReward.ProtoReflect.Descriptor instead.
func (*XpReward) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{40}
}

func (x *XpReward) GetSkill() uint32 {
	if x != nil {
		return x.Skill
	}
	return 0
}

func (x *XpReward) GetXp() uint32 {
	if x != nil {
		return x.Xp
	}
	return 0
}

type SkillsXp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	XpRewards     []*XpReward            `protobuf:"bytes,1,rep,name=xp_rewards,json=xpRewards,proto3" json:"xp_rewards,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SkillsXp) Reset() {
	*x = SkillsXp{}
	mi := &file_messages_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SkillsXp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SkillsXp) ProtoMessage() {}

func (x *SkillsXp) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SkillsXp.ProtoReflect.Descriptor instead.
func (*SkillsXp) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{41}
}

func (x *SkillsXp) GetXpRewards() []*XpReward {
	if x != nil {
		return x.XpRewards
	}
	return nil
}

type InteractWithNpcRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActorId       uint32                 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractWithNpcRequest) Reset() {
	*x = InteractWithNpcRequest{}
	mi := &file_messages_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractWithNpcRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractWithNpcRequest) ProtoMessage() {}

func (x *InteractWithNpcRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractWithNpcRequest.ProtoReflect.Descriptor instead.
func (*InteractWithNpcRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{42}
}

func (x *InteractWithNpcRequest) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

type InteractWithNpcResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActorId       uint32                 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Response      *Response              `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InteractWithNpcResponse) Reset() {
	*x = InteractWithNpcResponse{}
	mi := &file_messages_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InteractWithNpcResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractWithNpcResponse) ProtoMessage() {}

func (x *InteractWithNpcResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractWithNpcResponse.ProtoReflect.Descriptor instead.
func (*InteractWithNpcResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{43}
}

func (x *InteractWithNpcResponse) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *InteractWithNpcResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type NpcDialogue struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ActorId       uint32                 `protobuf:"varint,1,opt,name=actor_id,json=actorId,proto3" json:"actor_id,omitempty"`
	Dialogue      []string               `protobuf:"bytes,2,rep,name=dialogue,proto3" json:"dialogue,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NpcDialogue) Reset() {
	*x = NpcDialogue{}
	mi := &file_messages_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NpcDialogue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NpcDialogue) ProtoMessage() {}

func (x *NpcDialogue) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NpcDialogue.ProtoReflect.Descriptor instead.
func (*NpcDialogue) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{44}
}

func (x *NpcDialogue) GetActorId() uint32 {
	if x != nil {
		return x.ActorId
	}
	return 0
}

func (x *NpcDialogue) GetDialogue() []string {
	if x != nil {
		return x.Dialogue
	}
	return nil
}

type BuyRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShopOwnerActorId uint32                 `protobuf:"varint,1,opt,name=shop_owner_actor_id,json=shopOwnerActorId,proto3" json:"shop_owner_actor_id,omitempty"`
	Item             *Item                  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Quantity         uint32                 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BuyRequest) Reset() {
	*x = BuyRequest{}
	mi := &file_messages_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyRequest) ProtoMessage() {}

func (x *BuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyRequest.ProtoReflect.Descriptor instead.
func (*BuyRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{45}
}

func (x *BuyRequest) GetShopOwnerActorId() uint32 {
	if x != nil {
		return x.ShopOwnerActorId
	}
	return 0
}

func (x *BuyRequest) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type BuyResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShopOwnerActorId uint32                 `protobuf:"varint,1,opt,name=shop_owner_actor_id,json=shopOwnerActorId,proto3" json:"shop_owner_actor_id,omitempty"`
	ItemQty          *ItemQuantity          `protobuf:"bytes,2,opt,name=item_qty,json=itemQty,proto3" json:"item_qty,omitempty"`
	Response         *Response              `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	mi := &file_messages_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{46}
}

func (x *BuyResponse) GetShopOwnerActorId() uint32 {
	if x != nil {
		return x.ShopOwnerActorId
	}
	return 0
}

func (x *BuyResponse) GetItemQty() *ItemQuantity {
	if x != nil {
		return x.ItemQty
	}
	return nil
}

func (x *BuyResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type SellRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShopOwnerActorId uint32                 `protobuf:"varint,1,opt,name=shop_owner_actor_id,json=shopOwnerActorId,proto3" json:"shop_owner_actor_id,omitempty"`
	Item             *Item                  `protobuf:"bytes,2,opt,name=item,proto3" json:"item,omitempty"`
	Quantity         uint32                 `protobuf:"varint,3,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SellRequest) Reset() {
	*x = SellRequest{}
	mi := &file_messages_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellRequest) ProtoMessage() {}

func (x *SellRequest) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellRequest.ProtoReflect.Descriptor instead.
func (*SellRequest) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{47}
}

func (x *SellRequest) GetShopOwnerActorId() uint32 {
	if x != nil {
		return x.ShopOwnerActorId
	}
	return 0
}

func (x *SellRequest) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *SellRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type SellResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ShopOwnerActorId uint32                 `protobuf:"varint,1,opt,name=shop_owner_actor_id,json=shopOwnerActorId,proto3" json:"shop_owner_actor_id,omitempty"`
	ItemQty          *ItemQuantity          `protobuf:"bytes,2,opt,name=item_qty,json=itemQty,proto3" json:"item_qty,omitempty"`
	Response         *Response              `protobuf:"bytes,3,opt,name=response,proto3" json:"response,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *SellResponse) Reset() {
	*x = SellResponse{}
	mi := &file_messages_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SellResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SellResponse) ProtoMessage() {}

func (x *SellResponse) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SellResponse.ProtoReflect.Descriptor instead.
func (*SellResponse) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{48}
}

func (x *SellResponse) GetShopOwnerActorId() uint32 {
	if x != nil {
		return x.ShopOwnerActorId
	}
	return 0
}

func (x *SellResponse) GetItemQty() *ItemQuantity {
	if x != nil {
		return x.ItemQty
	}
	return nil
}

func (x *SellResponse) GetResponse() *Response {
	if x != nil {
		return x.Response
	}
	return nil
}

type LevelMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	GdResPath     string                 `protobuf:"bytes,1,opt,name=gd_res_path,json=gdResPath,proto3" json:"gd_res_path,omitempty"`
	DbLevelId     int32                  `protobuf:"varint,2,opt,name=db_level_id,json=dbLevelId,proto3" json:"db_level_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LevelMetadata) Reset() {
	*x = LevelMetadata{}
	mi := &file_messages_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LevelMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LevelMetadata) ProtoMessage() {}

func (x *LevelMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LevelMetadata.ProtoReflect.Descriptor instead.
func (*LevelMetadata) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{49}
}

func (x *LevelMetadata) GetGdResPath() string {
	if x != nil {
		return x.GdResPath
	}
	return ""
}

func (x *LevelMetadata) GetDbLevelId() int32 {
	if x != nil {
		return x.DbLevelId
	}
	return 0
}

type QuestInfo struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Name              string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	StartDialogue     *NpcDialogue           `protobuf:"bytes,2,opt,name=start_dialogue,json=startDialogue,proto3" json:"start_dialogue,omitempty"`
	RequiredItem      *Item                  `protobuf:"bytes,3,opt,name=required_item,json=requiredItem,proto3" json:"required_item,omitempty"`
	CompletedDialogue *NpcDialogue           `protobuf:"bytes,4,opt,name=completed_dialogue,json=completedDialogue,proto3" json:"completed_dialogue,omitempty"`
	RewardItem        *Item                  `protobuf:"bytes,5,opt,name=reward_item,json=rewardItem,proto3" json:"reward_item,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *QuestInfo) Reset() {
	*x = QuestInfo{}
	mi := &file_messages_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *QuestInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuestInfo) ProtoMessage() {}

func (x *QuestInfo) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuestInfo.ProtoReflect.Descriptor instead.
func (*QuestInfo) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{50}
}

func (x *QuestInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *QuestInfo) GetStartDialogue() *NpcDialogue {
	if x != nil {
		return x.StartDialogue
	}
	return nil
}

func (x *QuestInfo) GetRequiredItem() *Item {
	if x != nil {
		return x.RequiredItem
	}
	return nil
}

func (x *QuestInfo) GetCompletedDialogue() *NpcDialogue {
	if x != nil {
		return x.CompletedDialogue
	}
	return nil
}

func (x *QuestInfo) GetRewardItem() *Item {
	if x != nil {
		return x.RewardItem
	}
	return nil
}

type Packet struct {
	state    protoimpl.MessageState `protogen:"open.v1"`
	SenderId uint32                 `protobuf:"varint,1,opt,name=sender_id,json=senderId,proto3" json:"sender_id,omitempty"`
	// Types that are valid to be assigned to Msg:
	//
	//	*Packet_ClientId
	//	*Packet_LoginRequest
	//	*Packet_LoginResponse
	//	*Packet_RegisterRequest
	//	*Packet_RegisterResponse
	//	*Packet_Logout
	//	*Packet_Chat
	//	*Packet_Yell
	//	*Packet_Actor
	//	*Packet_ActorMove
	//	*Packet_Motd
	//	*Packet_Disconnect
	//	*Packet_AdminLoginGranted
	//	*Packet_SqlQuery
	//	*Packet_SqlResponse
	//	*Packet_LevelUpload
	//	*Packet_LevelUploadResponse
	//	*Packet_LevelDownload
	//	*Packet_AdminJoinGameRequest
	//	*Packet_AdminJoinGameResponse
	//	*Packet_ServerMessage
	//	*Packet_PickupGroundItemRequest
	//	*Packet_PickupGroundItemResponse
	//	*Packet_Shrub
	//	*Packet_Ore
	//	*Packet_Door
	//	*Packet_Item
	//	*Packet_GroundItem
	//	*Packet_ActorInventory
	//	*Packet_DropItemRequest
	//	*Packet_DropItemResponse
	//	*Packet_ChopShrubRequest
	//	*Packet_ChopShrubResponse
	//	*Packet_MineOreRequest
	//	*Packet_MineOreResponse
	//	*Packet_ItemQuantity
	//	*Packet_XpReward
	//	*Packet_SkillsXp
	//	*Packet_InteractWithNpcResponse
	//	*Packet_InteractWithNpcRequest
	//	*Packet_NpcDialogue
	//	*Packet_BuyRequest
	//	*Packet_BuyResponse
	//	*Packet_SellRequest
	//	*Packet_SellResponse
	//	*Packet_LevelMetadata
	//	*Packet_QuestInfo
	Msg           isPacket_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Packet) Reset() {
	*x = Packet{}
	mi := &file_messages_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Packet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Packet) ProtoMessage() {}

func (x *Packet) ProtoReflect() protoreflect.Message {
	mi := &file_messages_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Packet.ProtoReflect.Descriptor instead.
func (*Packet) Descriptor() ([]byte, []int) {
	return file_messages_proto_rawDescGZIP(), []int{51}
}

func (x *Packet) GetSenderId() uint32 {
	if x != nil {
		return x.SenderId
	}
	return 0
}

func (x *Packet) GetMsg() isPacket_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Packet) GetClientId() *ClientId {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ClientId); ok {
			return x.ClientId
		}
	}
	return nil
}

func (x *Packet) GetLoginRequest() *LoginRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_LoginRequest); ok {
			return x.LoginRequest
		}
	}
	return nil
}

func (x *Packet) GetLoginResponse() *LoginResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_LoginResponse); ok {
			return x.LoginResponse
		}
	}
	return nil
}

func (x *Packet) GetRegisterRequest() *RegisterRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_RegisterRequest); ok {
			return x.RegisterRequest
		}
	}
	return nil
}

func (x *Packet) GetRegisterResponse() *RegisterResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_RegisterResponse); ok {
			return x.RegisterResponse
		}
	}
	return nil
}

func (x *Packet) GetLogout() *Logout {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Logout); ok {
			return x.Logout
		}
	}
	return nil
}

func (x *Packet) GetChat() *Chat {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Chat); ok {
			return x.Chat
		}
	}
	return nil
}

func (x *Packet) GetYell() *Yell {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Yell); ok {
			return x.Yell
		}
	}
	return nil
}

func (x *Packet) GetActor() *Actor {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Actor); ok {
			return x.Actor
		}
	}
	return nil
}

func (x *Packet) GetActorMove() *ActorMove {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ActorMove); ok {
			return x.ActorMove
		}
	}
	return nil
}

func (x *Packet) GetMotd() *Motd {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Motd); ok {
			return x.Motd
		}
	}
	return nil
}

func (x *Packet) GetDisconnect() *Disconnect {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Disconnect); ok {
			return x.Disconnect
		}
	}
	return nil
}

func (x *Packet) GetAdminLoginGranted() *AdminLoginGranted {
	if x != nil {
		if x, ok := x.Msg.(*Packet_AdminLoginGranted); ok {
			return x.AdminLoginGranted
		}
	}
	return nil
}

func (x *Packet) GetSqlQuery() *SqlQuery {
	if x != nil {
		if x, ok := x.Msg.(*Packet_SqlQuery); ok {
			return x.SqlQuery
		}
	}
	return nil
}

func (x *Packet) GetSqlResponse() *SqlResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_SqlResponse); ok {
			return x.SqlResponse
		}
	}
	return nil
}

func (x *Packet) GetLevelUpload() *LevelUpload {
	if x != nil {
		if x, ok := x.Msg.(*Packet_LevelUpload); ok {
			return x.LevelUpload
		}
	}
	return nil
}

func (x *Packet) GetLevelUploadResponse() *LevelUploadResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_LevelUploadResponse); ok {
			return x.LevelUploadResponse
		}
	}
	return nil
}

func (x *Packet) GetLevelDownload() *LevelDownload {
	if x != nil {
		if x, ok := x.Msg.(*Packet_LevelDownload); ok {
			return x.LevelDownload
		}
	}
	return nil
}

func (x *Packet) GetAdminJoinGameRequest() *AdminJoinGameRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_AdminJoinGameRequest); ok {
			return x.AdminJoinGameRequest
		}
	}
	return nil
}

func (x *Packet) GetAdminJoinGameResponse() *AdminJoinGameResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_AdminJoinGameResponse); ok {
			return x.AdminJoinGameResponse
		}
	}
	return nil
}

func (x *Packet) GetServerMessage() *ServerMessage {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ServerMessage); ok {
			return x.ServerMessage
		}
	}
	return nil
}

func (x *Packet) GetPickupGroundItemRequest() *PickupGroundItemRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_PickupGroundItemRequest); ok {
			return x.PickupGroundItemRequest
		}
	}
	return nil
}

func (x *Packet) GetPickupGroundItemResponse() *PickupGroundItemResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_PickupGroundItemResponse); ok {
			return x.PickupGroundItemResponse
		}
	}
	return nil
}

func (x *Packet) GetShrub() *Shrub {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Shrub); ok {
			return x.Shrub
		}
	}
	return nil
}

func (x *Packet) GetOre() *Ore {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Ore); ok {
			return x.Ore
		}
	}
	return nil
}

func (x *Packet) GetDoor() *Door {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Door); ok {
			return x.Door
		}
	}
	return nil
}

func (x *Packet) GetItem() *Item {
	if x != nil {
		if x, ok := x.Msg.(*Packet_Item); ok {
			return x.Item
		}
	}
	return nil
}

func (x *Packet) GetGroundItem() *GroundItem {
	if x != nil {
		if x, ok := x.Msg.(*Packet_GroundItem); ok {
			return x.GroundItem
		}
	}
	return nil
}

func (x *Packet) GetActorInventory() *ActorInventory {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ActorInventory); ok {
			return x.ActorInventory
		}
	}
	return nil
}

func (x *Packet) GetDropItemRequest() *DropItemRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_DropItemRequest); ok {
			return x.DropItemRequest
		}
	}
	return nil
}

func (x *Packet) GetDropItemResponse() *DropItemResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_DropItemResponse); ok {
			return x.DropItemResponse
		}
	}
	return nil
}

func (x *Packet) GetChopShrubRequest() *ChopShrubRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ChopShrubRequest); ok {
			return x.ChopShrubRequest
		}
	}
	return nil
}

func (x *Packet) GetChopShrubResponse() *ChopShrubResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ChopShrubResponse); ok {
			return x.ChopShrubResponse
		}
	}
	return nil
}

func (x *Packet) GetMineOreRequest() *MineOreRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_MineOreRequest); ok {
			return x.MineOreRequest
		}
	}
	return nil
}

func (x *Packet) GetMineOreResponse() *MineOreResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_MineOreResponse); ok {
			return x.MineOreResponse
		}
	}
	return nil
}

func (x *Packet) GetItemQuantity() *ItemQuantity {
	if x != nil {
		if x, ok := x.Msg.(*Packet_ItemQuantity); ok {
			return x.ItemQuantity
		}
	}
	return nil
}

func (x *Packet) GetXpReward() *XpReward {
	if x != nil {
		if x, ok := x.Msg.(*Packet_XpReward); ok {
			return x.XpReward
		}
	}
	return nil
}

func (x *Packet) GetSkillsXp() *SkillsXp {
	if x != nil {
		if x, ok := x.Msg.(*Packet_SkillsXp); ok {
			return x.SkillsXp
		}
	}
	return nil
}

func (x *Packet) GetInteractWithNpcResponse() *InteractWithNpcResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_InteractWithNpcResponse); ok {
			return x.InteractWithNpcResponse
		}
	}
	return nil
}

func (x *Packet) GetInteractWithNpcRequest() *InteractWithNpcRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_InteractWithNpcRequest); ok {
			return x.InteractWithNpcRequest
		}
	}
	return nil
}

func (x *Packet) GetNpcDialogue() *NpcDialogue {
	if x != nil {
		if x, ok := x.Msg.(*Packet_NpcDialogue); ok {
			return x.NpcDialogue
		}
	}
	return nil
}

func (x *Packet) GetBuyRequest() *BuyRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_BuyRequest); ok {
			return x.BuyRequest
		}
	}
	return nil
}

func (x *Packet) GetBuyResponse() *BuyResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_BuyResponse); ok {
			return x.BuyResponse
		}
	}
	return nil
}

func (x *Packet) GetSellRequest() *SellRequest {
	if x != nil {
		if x, ok := x.Msg.(*Packet_SellRequest); ok {
			return x.SellRequest
		}
	}
	return nil
}

func (x *Packet) GetSellResponse() *SellResponse {
	if x != nil {
		if x, ok := x.Msg.(*Packet_SellResponse); ok {
			return x.SellResponse
		}
	}
	return nil
}

func (x *Packet) GetLevelMetadata() *LevelMetadata {
	if x != nil {
		if x, ok := x.Msg.(*Packet_LevelMetadata); ok {
			return x.LevelMetadata
		}
	}
	return nil
}

func (x *Packet) GetQuestInfo() *QuestInfo {
	if x != nil {
		if x, ok := x.Msg.(*Packet_QuestInfo); ok {
			return x.QuestInfo
		}
	}
	return nil
}

type isPacket_Msg interface {
	isPacket_Msg()
}

type Packet_ClientId struct {
	ClientId *ClientId `protobuf:"bytes,2,opt,name=client_id,json=clientId,proto3,oneof"`
}

type Packet_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,3,opt,name=login_request,json=loginRequest,proto3,oneof"`
}

type Packet_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,4,opt,name=login_response,json=loginResponse,proto3,oneof"`
}

type Packet_RegisterRequest struct {
	RegisterRequest *RegisterRequest `protobuf:"bytes,5,opt,name=register_request,json=registerRequest,proto3,oneof"`
}

type Packet_RegisterResponse struct {
	RegisterResponse *RegisterResponse `protobuf:"bytes,6,opt,name=register_response,json=registerResponse,proto3,oneof"`
}

type Packet_Logout struct {
	Logout *Logout `protobuf:"bytes,7,opt,name=logout,proto3,oneof"`
}

type Packet_Chat struct {
	Chat *Chat `protobuf:"bytes,8,opt,name=chat,proto3,oneof"`
}

type Packet_Yell struct {
	Yell *Yell `protobuf:"bytes,9,opt,name=yell,proto3,oneof"`
}

type Packet_Actor struct {
	Actor *Actor `protobuf:"bytes,10,opt,name=actor,proto3,oneof"`
}

type Packet_ActorMove struct {
	ActorMove *ActorMove `protobuf:"bytes,11,opt,name=actor_move,json=actorMove,proto3,oneof"`
}

type Packet_Motd struct {
	Motd *Motd `protobuf:"bytes,12,opt,name=motd,proto3,oneof"`
}

type Packet_Disconnect struct {
	Disconnect *Disconnect `protobuf:"bytes,13,opt,name=disconnect,proto3,oneof"`
}

type Packet_AdminLoginGranted struct {
	AdminLoginGranted *AdminLoginGranted `protobuf:"bytes,14,opt,name=admin_login_granted,json=adminLoginGranted,proto3,oneof"`
}

type Packet_SqlQuery struct {
	SqlQuery *SqlQuery `protobuf:"bytes,15,opt,name=sql_query,json=sqlQuery,proto3,oneof"`
}

type Packet_SqlResponse struct {
	SqlResponse *SqlResponse `protobuf:"bytes,16,opt,name=sql_response,json=sqlResponse,proto3,oneof"`
}

type Packet_LevelUpload struct {
	LevelUpload *LevelUpload `protobuf:"bytes,17,opt,name=level_upload,json=levelUpload,proto3,oneof"`
}

type Packet_LevelUploadResponse struct {
	LevelUploadResponse *LevelUploadResponse `protobuf:"bytes,18,opt,name=level_upload_response,json=levelUploadResponse,proto3,oneof"`
}

type Packet_LevelDownload struct {
	LevelDownload *LevelDownload `protobuf:"bytes,19,opt,name=level_download,json=levelDownload,proto3,oneof"`
}

type Packet_AdminJoinGameRequest struct {
	AdminJoinGameRequest *AdminJoinGameRequest `protobuf:"bytes,20,opt,name=admin_join_game_request,json=adminJoinGameRequest,proto3,oneof"`
}

type Packet_AdminJoinGameResponse struct {
	AdminJoinGameResponse *AdminJoinGameResponse `protobuf:"bytes,21,opt,name=admin_join_game_response,json=adminJoinGameResponse,proto3,oneof"`
}

type Packet_ServerMessage struct {
	ServerMessage *ServerMessage `protobuf:"bytes,22,opt,name=server_message,json=serverMessage,proto3,oneof"`
}

type Packet_PickupGroundItemRequest struct {
	PickupGroundItemRequest *PickupGroundItemRequest `protobuf:"bytes,23,opt,name=pickup_ground_item_request,json=pickupGroundItemRequest,proto3,oneof"`
}

type Packet_PickupGroundItemResponse struct {
	PickupGroundItemResponse *PickupGroundItemResponse `protobuf:"bytes,24,opt,name=pickup_ground_item_response,json=pickupGroundItemResponse,proto3,oneof"`
}

type Packet_Shrub struct {
	Shrub *Shrub `protobuf:"bytes,25,opt,name=shrub,proto3,oneof"`
}

type Packet_Ore struct {
	Ore *Ore `protobuf:"bytes,26,opt,name=ore,proto3,oneof"`
}

type Packet_Door struct {
	Door *Door `protobuf:"bytes,27,opt,name=door,proto3,oneof"`
}

type Packet_Item struct {
	Item *Item `protobuf:"bytes,28,opt,name=Item,proto3,oneof"`
}

type Packet_GroundItem struct {
	GroundItem *GroundItem `protobuf:"bytes,29,opt,name=ground_item,json=groundItem,proto3,oneof"`
}

type Packet_ActorInventory struct {
	ActorInventory *ActorInventory `protobuf:"bytes,30,opt,name=actor_inventory,json=actorInventory,proto3,oneof"`
}

type Packet_DropItemRequest struct {
	DropItemRequest *DropItemRequest `protobuf:"bytes,31,opt,name=drop_item_request,json=dropItemRequest,proto3,oneof"`
}

type Packet_DropItemResponse struct {
	DropItemResponse *DropItemResponse `protobuf:"bytes,32,opt,name=drop_item_response,json=dropItemResponse,proto3,oneof"`
}

type Packet_ChopShrubRequest struct {
	ChopShrubRequest *ChopShrubRequest `protobuf:"bytes,33,opt,name=chop_shrub_request,json=chopShrubRequest,proto3,oneof"`
}

type Packet_ChopShrubResponse struct {
	ChopShrubResponse *ChopShrubResponse `protobuf:"bytes,34,opt,name=chop_shrub_response,json=chopShrubResponse,proto3,oneof"`
}

type Packet_MineOreRequest struct {
	MineOreRequest *MineOreRequest `protobuf:"bytes,35,opt,name=mine_ore_request,json=mineOreRequest,proto3,oneof"`
}

type Packet_MineOreResponse struct {
	MineOreResponse *MineOreResponse `protobuf:"bytes,36,opt,name=mine_ore_response,json=mineOreResponse,proto3,oneof"`
}

type Packet_ItemQuantity struct {
	ItemQuantity *ItemQuantity `protobuf:"bytes,37,opt,name=item_quantity,json=itemQuantity,proto3,oneof"`
}

type Packet_XpReward struct {
	XpReward *XpReward `protobuf:"bytes,38,opt,name=xp_reward,json=xpReward,proto3,oneof"`
}

type Packet_SkillsXp struct {
	SkillsXp *SkillsXp `protobuf:"bytes,39,opt,name=skills_xp,json=skillsXp,proto3,oneof"`
}

type Packet_InteractWithNpcResponse struct {
	InteractWithNpcResponse *InteractWithNpcResponse `protobuf:"bytes,40,opt,name=interact_with_npc_response,json=interactWithNpcResponse,proto3,oneof"`
}

type Packet_InteractWithNpcRequest struct {
	InteractWithNpcRequest *InteractWithNpcRequest `protobuf:"bytes,41,opt,name=interact_with_npc_request,json=interactWithNpcRequest,proto3,oneof"`
}

type Packet_NpcDialogue struct {
	NpcDialogue *NpcDialogue `protobuf:"bytes,42,opt,name=npc_dialogue,json=npcDialogue,proto3,oneof"`
}

type Packet_BuyRequest struct {
	BuyRequest *BuyRequest `protobuf:"bytes,43,opt,name=buy_request,json=buyRequest,proto3,oneof"`
}

type Packet_BuyResponse struct {
	BuyResponse *BuyResponse `protobuf:"bytes,44,opt,name=buy_response,json=buyResponse,proto3,oneof"`
}

type Packet_SellRequest struct {
	SellRequest *SellRequest `protobuf:"bytes,45,opt,name=sell_request,json=sellRequest,proto3,oneof"`
}

type Packet_SellResponse struct {
	SellResponse *SellResponse `protobuf:"bytes,46,opt,name=sell_response,json=sellResponse,proto3,oneof"`
}

type Packet_LevelMetadata struct {
	LevelMetadata *LevelMetadata `protobuf:"bytes,47,opt,name=level_metadata,json=levelMetadata,proto3,oneof"`
}

type Packet_QuestInfo struct {
	QuestInfo *QuestInfo `protobuf:"bytes,48,opt,name=quest_info,json=questInfo,proto3,oneof"`
}

func (*Packet_ClientId) isPacket_Msg() {}

func (*Packet_LoginRequest) isPacket_Msg() {}

func (*Packet_LoginResponse) isPacket_Msg() {}

func (*Packet_RegisterRequest) isPacket_Msg() {}

func (*Packet_RegisterResponse) isPacket_Msg() {}

func (*Packet_Logout) isPacket_Msg() {}

func (*Packet_Chat) isPacket_Msg() {}

func (*Packet_Yell) isPacket_Msg() {}

func (*Packet_Actor) isPacket_Msg() {}

func (*Packet_ActorMove) isPacket_Msg() {}

func (*Packet_Motd) isPacket_Msg() {}

func (*Packet_Disconnect) isPacket_Msg() {}

func (*Packet_AdminLoginGranted) isPacket_Msg() {}

func (*Packet_SqlQuery) isPacket_Msg() {}

func (*Packet_SqlResponse) isPacket_Msg() {}

func (*Packet_LevelUpload) isPacket_Msg() {}

func (*Packet_LevelUploadResponse) isPacket_Msg() {}

func (*Packet_LevelDownload) isPacket_Msg() {}

func (*Packet_AdminJoinGameRequest) isPacket_Msg() {}

func (*Packet_AdminJoinGameResponse) isPacket_Msg() {}

func (*Packet_ServerMessage) isPacket_Msg() {}

func (*Packet_PickupGroundItemRequest) isPacket_Msg() {}

func (*Packet_PickupGroundItemResponse) isPacket_Msg() {}

func (*Packet_Shrub) isPacket_Msg() {}

func (*Packet_Ore) isPacket_Msg() {}

func (*Packet_Door) isPacket_Msg() {}

func (*Packet_Item) isPacket_Msg() {}

func (*Packet_GroundItem) isPacket_Msg() {}

func (*Packet_ActorInventory) isPacket_Msg() {}

func (*Packet_DropItemRequest) isPacket_Msg() {}

func (*Packet_DropItemResponse) isPacket_Msg() {}

func (*Packet_ChopShrubRequest) isPacket_Msg() {}

func (*Packet_ChopShrubResponse) isPacket_Msg() {}

func (*Packet_MineOreRequest) isPacket_Msg() {}

func (*Packet_MineOreResponse) isPacket_Msg() {}

func (*Packet_ItemQuantity) isPacket_Msg() {}

func (*Packet_XpReward) isPacket_Msg() {}

func (*Packet_SkillsXp) isPacket_Msg() {}

func (*Packet_InteractWithNpcResponse) isPacket_Msg() {}

func (*Packet_InteractWithNpcRequest) isPacket_Msg() {}

func (*Packet_NpcDialogue) isPacket_Msg() {}

func (*Packet_BuyRequest) isPacket_Msg() {}

func (*Packet_BuyResponse) isPacket_Msg() {}

func (*Packet_SellRequest) isPacket_Msg() {}

func (*Packet_SellResponse) isPacket_Msg() {}

func (*Packet_LevelMetadata) isPacket_Msg() {}

func (*Packet_QuestInfo) isPacket_Msg() {}

var File_messages_proto protoreflect.FileDescriptor

var file_messages_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x22, 0x48, 0x0a, 0x08, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x12, 0x12, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x42, 0x0e, 0x0a, 0x0c, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c,
	0x5f, 0x6d, 0x73, 0x67, 0x22, 0x1a, 0x0a, 0x08, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x46, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x3f, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x99, 0x01, 0x0a, 0x0f, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x26, 0x0a,
	0x0f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x59, 0x22, 0x42, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x08, 0x0a, 0x06, 0x4c, 0x6f, 0x67,
	0x6f, 0x75, 0x74, 0x22, 0x18, 0x0a, 0x04, 0x43, 0x68, 0x61, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x39, 0x0a,
	0x04, 0x59, 0x65, 0x6c, 0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xae, 0x01, 0x0a, 0x05, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78,
	0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x72,
	0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x58, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x70,
	0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x59, 0x12, 0x15, 0x0a, 0x06, 0x69, 0x73, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x05, 0x69, 0x73, 0x56, 0x69, 0x70, 0x22, 0x2b, 0x0a, 0x09, 0x41, 0x63, 0x74,
	0x6f, 0x72, 0x4d, 0x6f, 0x76, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x78, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x64, 0x78, 0x12, 0x0e, 0x0a, 0x02, 0x64, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x64, 0x79, 0x22, 0x18, 0x0a, 0x04, 0x4d, 0x6f, 0x74, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x22, 0x0c, 0x0a, 0x0a, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x22, 0x13,
	0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x6e,
	0x74, 0x65, 0x64, 0x22, 0x20, 0x0a, 0x08, 0x53, 0x71, 0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x20, 0x0a, 0x06, 0x53, 0x71, 0x6c, 0x52, 0x6f, 0x77, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x7d, 0x0a, 0x0b, 0x53, 0x71, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73,
	0x12, 0x24, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x71, 0x6c, 0x52, 0x6f, 0x77,
	0x52, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x22, 0x2c, 0x0a, 0x0e, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x79, 0x22, 0x4f, 0x0a, 0x05, 0x53, 0x68, 0x72, 0x75, 0x62, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x72,
	0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x4d, 0x0a, 0x03, 0x4f, 0x72, 0x65, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x0c, 0x0a, 0x01,
	0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x22, 0xd5, 0x01, 0x0a, 0x04, 0x44, 0x6f, 0x6f, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x40, 0x0a,
	0x1d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x65, 0x76,
	0x65, 0x6c, 0x5f, 0x67, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x47, 0x64, 0x52, 0x65, 0x73, 0x50, 0x61, 0x74, 0x68, 0x12,
	0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x58, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x64, 0x65, 0x73,
	0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x98, 0x01, 0x0a,
	0x09, 0x54, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74,
	0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d,
	0x6c, 0x65, 0x76, 0x65, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x31, 0x0a,
	0x08, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x48, 0x61, 0x72, 0x76, 0x65,
	0x73, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x08, 0x68, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74, 0x73,
	0x12, 0x15, 0x0a, 0x06, 0x6b, 0x65, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x6b, 0x65, 0x79, 0x49, 0x64, 0x22, 0x93, 0x02, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26, 0x0a, 0x0f,
	0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x78, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67,
	0x69, 0x6f, 0x6e, 0x58, 0x12, 0x26, 0x0a, 0x0f, 0x73, 0x70, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x72,
	0x65, 0x67, 0x69, 0x6f, 0x6e, 0x5f, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73,
	0x70, 0x72, 0x69, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x59, 0x12, 0x32, 0x0a, 0x0a,
	0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x54, 0x6f, 0x6f, 0x6c,
	0x50, 0x72, 0x6f, 0x70, 0x73, 0x52, 0x09, 0x74, 0x6f, 0x6f, 0x6c, 0x50, 0x72, 0x6f, 0x70, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x5f, 0x76, 0x69, 0x70, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x67, 0x72, 0x61, 0x6e, 0x74, 0x73, 0x56, 0x69, 0x70, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x85, 0x01,
	0x0a, 0x0a, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x12, 0x27, 0x0a, 0x0f,
	0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x5f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x72, 0x65, 0x73, 0x70, 0x61, 0x77, 0x6e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x22, 0xb0, 0x02, 0x0a, 0x0b, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x64, 0x52, 0x65,
	0x73, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x73, 0x63, 0x6e, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x74, 0x73, 0x63, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x41, 0x0a, 0x0f, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x0e, 0x63, 0x6f, 0x6c, 0x6c, 0x69, 0x73, 0x69, 0x6f, 0x6e,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x05, 0x73, 0x68, 0x72, 0x75, 0x62, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x53, 0x68, 0x72, 0x75, 0x62, 0x52, 0x05, 0x73, 0x68, 0x72, 0x75, 0x62, 0x12, 0x1f, 0x0a, 0x03,
	0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x4f, 0x72, 0x65, 0x52, 0x03, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a,
	0x04, 0x64, 0x6f, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x6f, 0x72, 0x52, 0x04, 0x64, 0x6f, 0x6f,
	0x72, 0x12, 0x35, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0a, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0x85, 0x01, 0x0a, 0x13, 0x4c, 0x65, 0x76,
	0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x62, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x64, 0x52, 0x65, 0x73, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x23, 0x0a, 0x0d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x16, 0x0a, 0x14, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4a, 0x6f,
	0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x47, 0x0a,
	0x15, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3f, 0x0a, 0x17, 0x50, 0x69, 0x63,
	0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x67, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x81, 0x01, 0x0a, 0x18, 0x50,
	0x69, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x2e,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x51,
	0x0a, 0x0f, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x22, 0x82, 0x01, 0x0a, 0x10, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4e, 0x0a, 0x0c, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x53, 0x0a, 0x0e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49,
	0x6e, 0x76, 0x65, 0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x10, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74,
	0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x69, 0x74, 0x65, 0x6d,
	0x73, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x22, 0x2d, 0x0a, 0x10, 0x43,
	0x68, 0x6f, 0x70, 0x53, 0x68, 0x72, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x68, 0x72, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x68, 0x72, 0x75, 0x62, 0x49, 0x64, 0x22, 0x5e, 0x0a, 0x11, 0x43, 0x68,
	0x6f, 0x70, 0x53, 0x68, 0x72, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x73, 0x68, 0x72, 0x75, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x07, 0x73, 0x68, 0x72, 0x75, 0x62, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x27, 0x0a, 0x0e, 0x4d, 0x69,
	0x6e, 0x65, 0x4f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72,
	0x65, 0x49, 0x64, 0x22, 0x58, 0x0a, 0x0f, 0x4d, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x6f, 0x72, 0x65, 0x49, 0x64, 0x12, 0x2e, 0x0a,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a,
	0x08, 0x58, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x12,
	0x0e, 0x0a, 0x02, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x78, 0x70, 0x22,
	0x3d, 0x0a, 0x08, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x58, 0x70, 0x12, 0x31, 0x0a, 0x0a, 0x78,
	0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x58, 0x70, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x52, 0x09, 0x78, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x73, 0x22, 0x33,
	0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x70,
	0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x22, 0x64, 0x0a, 0x17, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x57,
	0x69, 0x74, 0x68, 0x4e, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19,
	0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x44, 0x0a, 0x0b, 0x4e, 0x70, 0x63,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x22,
	0x7b, 0x0a, 0x0a, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x70,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0x9f, 0x01, 0x0a,
	0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a, 0x13,
	0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x70, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08, 0x69,
	0x74, 0x65, 0x6d, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x12, 0x2e,
	0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x7c,
	0x0a, 0x0b, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x70,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x04,
	0x69, 0x74, 0x65, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d,
	0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x22, 0xa0, 0x01, 0x0a,
	0x0c, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2d, 0x0a,
	0x13, 0x73, 0x68, 0x6f, 0x70, 0x5f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x63, 0x74, 0x6f,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x70,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x08,
	0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x52, 0x07, 0x69, 0x74, 0x65, 0x6d, 0x51, 0x74, 0x79, 0x12,
	0x2e, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x4f, 0x0a, 0x0d, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1e, 0x0a, 0x0b, 0x67, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x64, 0x52, 0x65, 0x73, 0x50, 0x61, 0x74, 0x68,
	0x12, 0x1e, 0x0a, 0x0b, 0x64, 0x62, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x64, 0x62, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x49, 0x64,
	0x22, 0x89, 0x02, 0x0a, 0x09, 0x51, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x64, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4e, 0x70, 0x63, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75,
	0x65, 0x52, 0x0d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65,
	0x12, 0x33, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x44, 0x0a, 0x12, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4e, 0x70, 0x63,
	0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x2f, 0x0a, 0x0b, 0x72,
	0x65, 0x77, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x0a, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x22, 0xd6, 0x17, 0x0a,
	0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x48, 0x00, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x3d, 0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x49, 0x0a, 0x11, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x6c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x48, 0x00, 0x52,
	0x06, 0x6c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x63, 0x68, 0x61, 0x74, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x00, 0x52, 0x04, 0x63, 0x68, 0x61, 0x74, 0x12, 0x24, 0x0a,
	0x04, 0x79, 0x65, 0x6c, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x59, 0x65, 0x6c, 0x6c, 0x48, 0x00, 0x52, 0x04, 0x79,
	0x65, 0x6c, 0x6c, 0x12, 0x27, 0x0a, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x63,
	0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x34, 0x0a, 0x0a,
	0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f,
	0x72, 0x4d, 0x6f, 0x76, 0x65, 0x48, 0x00, 0x52, 0x09, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x4d, 0x6f,
	0x76, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x6d, 0x6f, 0x74, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x6f, 0x74, 0x64,
	0x48, 0x00, 0x52, 0x04, 0x6d, 0x6f, 0x74, 0x64, 0x12, 0x36, 0x0a, 0x0a, 0x64, 0x69, 0x73, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x12, 0x4d, 0x0a, 0x13, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
	0x67, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x48, 0x00, 0x52, 0x11, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x47, 0x72, 0x61, 0x6e, 0x74, 0x65, 0x64, 0x12,
	0x31, 0x0a, 0x09, 0x73, 0x71, 0x6c, 0x5f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x71,
	0x6c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x48, 0x00, 0x52, 0x08, 0x73, 0x71, 0x6c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x3a, 0x0a, 0x0c, 0x73, 0x71, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x73, 0x2e, 0x53, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x71, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a,
	0x0a, 0x0c, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e,
	0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x6c,
	0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x53, 0x0a, 0x15, 0x6c, 0x65,
	0x76, 0x65, 0x6c, 0x5f, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x65, 0x76, 0x65,
	0x6c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x0e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x48, 0x00, 0x52, 0x0d, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x12, 0x57, 0x0a, 0x17, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f,
	0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x14, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x47,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x18, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x6a, 0x6f, 0x69, 0x6e, 0x5f, 0x67, 0x61, 0x6d, 0x65, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x4a, 0x6f, 0x69,
	0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x15, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x47, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x60, 0x0a, 0x1a, 0x70, 0x69, 0x63, 0x6b,
	0x75, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x72,
	0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x17, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x63, 0x0a, 0x1b, 0x70, 0x69,
	0x63, 0x6b, 0x75, 0x70, 0x5f, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x50, 0x69, 0x63, 0x6b, 0x75,
	0x70, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x70, 0x69, 0x63, 0x6b, 0x75, 0x70, 0x47, 0x72, 0x6f,
	0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x27, 0x0a, 0x05, 0x73, 0x68, 0x72, 0x75, 0x62, 0x18, 0x19, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x68, 0x72, 0x75, 0x62, 0x48,
	0x00, 0x52, 0x05, 0x73, 0x68, 0x72, 0x75, 0x62, 0x12, 0x21, 0x0a, 0x03, 0x6f, 0x72, 0x65, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x4f, 0x72, 0x65, 0x48, 0x00, 0x52, 0x03, 0x6f, 0x72, 0x65, 0x12, 0x24, 0x0a, 0x04, 0x64,
	0x6f, 0x6f, 0x72, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x6f, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0e, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x48,
	0x00, 0x52, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x0b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74,
	0x65, 0x6d, 0x48, 0x00, 0x52, 0x0a, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x43, 0x0a, 0x0f, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x65, 0x6e, 0x74,
	0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x0e, 0x61, 0x63, 0x74, 0x6f, 0x72, 0x49, 0x6e, 0x76, 0x65,
	0x6e, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x11, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x74,
	0x65, 0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x6f, 0x70,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x64,
	0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a,
	0x0a, 0x12, 0x64, 0x72, 0x6f, 0x70, 0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x20, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x44, 0x72, 0x6f, 0x70, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x64, 0x72, 0x6f, 0x70, 0x49, 0x74,
	0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x12, 0x63, 0x68,
	0x6f, 0x70, 0x5f, 0x73, 0x68, 0x72, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x43, 0x68, 0x6f, 0x70, 0x53, 0x68, 0x72, 0x75, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x63, 0x68, 0x6f, 0x70, 0x53, 0x68, 0x72, 0x75, 0x62, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x63, 0x68, 0x6f, 0x70, 0x5f, 0x73,
	0x68, 0x72, 0x75, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x22, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x43,
	0x68, 0x6f, 0x70, 0x53, 0x68, 0x72, 0x75, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x11, 0x63, 0x68, 0x6f, 0x70, 0x53, 0x68, 0x72, 0x75, 0x62, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x44, 0x0a, 0x10, 0x6d, 0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x72,
	0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x23, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x18, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x4f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0e, 0x6d, 0x69, 0x6e,
	0x65, 0x4f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x11, 0x6d,
	0x69, 0x6e, 0x65, 0x5f, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x24, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x4d, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x69, 0x6e, 0x65, 0x4f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0d, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x71, 0x75, 0x61,
	0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x25, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x74, 0x65, 0x6d, 0x51, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x12, 0x31, 0x0a, 0x09, 0x78, 0x70, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x18, 0x26, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x73, 0x2e, 0x58, 0x70, 0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x08, 0x78, 0x70,
	0x52, 0x65, 0x77, 0x61, 0x72, 0x64, 0x12, 0x31, 0x0a, 0x09, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73,
	0x5f, 0x78, 0x70, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x58, 0x70, 0x48, 0x00, 0x52,
	0x08, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x58, 0x70, 0x12, 0x60, 0x0a, 0x1a, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6e, 0x70, 0x63, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x28, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x17, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x4e, 0x70, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5d, 0x0a, 0x19, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x77, 0x69, 0x74, 0x68, 0x5f, 0x6e, 0x70, 0x63,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x57, 0x69, 0x74, 0x68, 0x4e, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x57, 0x69, 0x74, 0x68,
	0x4e, 0x70, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0c, 0x6e, 0x70,
	0x63, 0x5f, 0x64, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x18, 0x2a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4e, 0x70, 0x63, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x6e, 0x70, 0x63, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x75, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x00, 0x52, 0x0a, 0x62, 0x75, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3a, 0x0a, 0x0c, 0x62, 0x75, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x2c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73,
	0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0b,
	0x62, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x73,
	0x65, 0x6c, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x2d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c,
	0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x6c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x73, 0x65, 0x6c, 0x6c, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x53, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x73, 0x65, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x5f,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x2f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x4c, 0x65, 0x76, 0x65, 0x6c, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x65, 0x76, 0x65, 0x6c,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0a, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x30, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x73, 0x2e, 0x51, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x09, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x05,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x2a, 0x2b, 0x0a, 0x0b, 0x48, 0x61, 0x72, 0x76, 0x65, 0x73, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09,
	0x0a, 0x05, 0x53, 0x48, 0x52, 0x55, 0x42, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x52, 0x45,
	0x10, 0x02, 0x42, 0x0d, 0x5a, 0x0b, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_messages_proto_rawDescOnce sync.Once
	file_messages_proto_rawDescData = file_messages_proto_rawDesc
)

func file_messages_proto_rawDescGZIP() []byte {
	file_messages_proto_rawDescOnce.Do(func() {
		file_messages_proto_rawDescData = protoimpl.X.CompressGZIP(file_messages_proto_rawDescData)
	})
	return file_messages_proto_rawDescData
}

var file_messages_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_messages_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_messages_proto_goTypes = []any{
	(Harvestable)(0),                 // 0: messages.Harvestable
	(*Response)(nil),                 // 1: messages.Response
	(*ClientId)(nil),                 // 2: messages.ClientId
	(*LoginRequest)(nil),             // 3: messages.LoginRequest
	(*LoginResponse)(nil),            // 4: messages.LoginResponse
	(*RegisterRequest)(nil),          // 5: messages.RegisterRequest
	(*RegisterResponse)(nil),         // 6: messages.RegisterResponse
	(*Logout)(nil),                   // 7: messages.Logout
	(*Chat)(nil),                     // 8: messages.Chat
	(*Yell)(nil),                     // 9: messages.Yell
	(*Actor)(nil),                    // 10: messages.Actor
	(*ActorMove)(nil),                // 11: messages.ActorMove
	(*Motd)(nil),                     // 12: messages.Motd
	(*Disconnect)(nil),               // 13: messages.Disconnect
	(*AdminLoginGranted)(nil),        // 14: messages.AdminLoginGranted
	(*SqlQuery)(nil),                 // 15: messages.SqlQuery
	(*SqlRow)(nil),                   // 16: messages.SqlRow
	(*SqlResponse)(nil),              // 17: messages.SqlResponse
	(*CollisionPoint)(nil),           // 18: messages.CollisionPoint
	(*Shrub)(nil),                    // 19: messages.Shrub
	(*Ore)(nil),                      // 20: messages.Ore
	(*Door)(nil),                     // 21: messages.Door
	(*ToolProps)(nil),                // 22: messages.ToolProps
	(*Item)(nil),                     // 23: messages.Item
	(*GroundItem)(nil),               // 24: messages.GroundItem
	(*LevelUpload)(nil),              // 25: messages.LevelUpload
	(*LevelUploadResponse)(nil),      // 26: messages.LevelUploadResponse
	(*LevelDownload)(nil),            // 27: messages.LevelDownload
	(*AdminJoinGameRequest)(nil),     // 28: messages.AdminJoinGameRequest
	(*AdminJoinGameResponse)(nil),    // 29: messages.AdminJoinGameResponse
	(*ServerMessage)(nil),            // 30: messages.ServerMessage
	(*PickupGroundItemRequest)(nil),  // 31: messages.PickupGroundItemRequest
	(*PickupGroundItemResponse)(nil), // 32: messages.PickupGroundItemResponse
	(*DropItemRequest)(nil),          // 33: messages.DropItemRequest
	(*DropItemResponse)(nil),         // 34: messages.DropItemResponse
	(*ItemQuantity)(nil),             // 35: messages.ItemQuantity
	(*ActorInventory)(nil),           // 36: messages.ActorInventory
	(*ChopShrubRequest)(nil),         // 37: messages.ChopShrubRequest
	(*ChopShrubResponse)(nil),        // 38: messages.ChopShrubResponse
	(*MineOreRequest)(nil),           // 39: messages.MineOreRequest
	(*MineOreResponse)(nil),          // 40: messages.MineOreResponse
	(*XpReward)(nil),                 // 41: messages.XpReward
	(*SkillsXp)(nil),                 // 42: messages.SkillsXp
	(*InteractWithNpcRequest)(nil),   // 43: messages.InteractWithNpcRequest
	(*InteractWithNpcResponse)(nil),  // 44: messages.InteractWithNpcResponse
	(*NpcDialogue)(nil),              // 45: messages.NpcDialogue
	(*BuyRequest)(nil),               // 46: messages.BuyRequest
	(*BuyResponse)(nil),              // 47: messages.BuyResponse
	(*SellRequest)(nil),              // 48: messages.SellRequest
	(*SellResponse)(nil),             // 49: messages.SellResponse
	(*LevelMetadata)(nil),            // 50: messages.LevelMetadata
	(*QuestInfo)(nil),                // 51: messages.QuestInfo
	(*Packet)(nil),                   // 52: messages.Packet
}
var file_messages_proto_depIdxs = []int32{
	1,  // 0: messages.LoginResponse.response:type_name -> messages.Response
	1,  // 1: messages.RegisterResponse.response:type_name -> messages.Response
	1,  // 2: messages.SqlResponse.response:type_name -> messages.Response
	16, // 3: messages.SqlResponse.rows:type_name -> messages.SqlRow
	0,  // 4: messages.ToolProps.harvests:type_name -> messages.Harvestable
	22, // 5: messages.Item.tool_props:type_name -> messages.ToolProps
	23, // 6: messages.GroundItem.item:type_name -> messages.Item
	18, // 7: messages.LevelUpload.collision_point:type_name -> messages.CollisionPoint
	19, // 8: messages.LevelUpload.shrub:type_name -> messages.Shrub
	20, // 9: messages.LevelUpload.ore:type_name -> messages.Ore
	21, // 10: messages.LevelUpload.door:type_name -> messages.Door
	24, // 11: messages.LevelUpload.ground_item:type_name -> messages.GroundItem
	1,  // 12: messages.LevelUploadResponse.response:type_name -> messages.Response
	1,  // 13: messages.AdminJoinGameResponse.response:type_name -> messages.Response
	24, // 14: messages.PickupGroundItemResponse.ground_item:type_name -> messages.GroundItem
	1,  // 15: messages.PickupGroundItemResponse.response:type_name -> messages.Response
	23, // 16: messages.DropItemRequest.item:type_name -> messages.Item
	23, // 17: messages.DropItemResponse.item:type_name -> messages.Item
	1,  // 18: messages.DropItemResponse.response:type_name -> messages.Response
	23, // 19: messages.ItemQuantity.item:type_name -> messages.Item
	35, // 20: messages.ActorInventory.items_quantities:type_name -> messages.ItemQuantity
	1,  // 21: messages.ChopShrubResponse.response:type_name -> messages.Response
	1,  // 22: messages.MineOreResponse.response:type_name -> messages.Response
	41, // 23: messages.SkillsXp.xp_rewards:type_name -> messages.XpReward
	1,  // 24: messages.InteractWithNpcResponse.response:type_name -> messages.Response
	23, // 25: messages.BuyRequest.item:type_name -> messages.Item
	35, // 26: messages.BuyResponse.item_qty:type_name -> messages.ItemQuantity
	1,  // 27: messages.BuyResponse.response:type_name -> messages.Response
	23, // 28: messages.SellRequest.item:type_name -> messages.Item
	35, // 29: messages.SellResponse.item_qty:type_name -> messages.ItemQuantity
	1,  // 30: messages.SellResponse.response:type_name -> messages.Response
	45, // 31: messages.QuestInfo.start_dialogue:type_name -> messages.NpcDialogue
	23, // 32: messages.QuestInfo.required_item:type_name -> messages.Item
	45, // 33: messages.QuestInfo.completed_dialogue:type_name -> messages.NpcDialogue
	23, // 34: messages.QuestInfo.reward_item:type_name -> messages.Item
	2,  // 35: messages.Packet.client_id:type_name -> messages.ClientId
	3,  // 36: messages.Packet.login_request:type_name -> messages.LoginRequest
	4,  // 37: messages.Packet.login_response:type_name -> messages.LoginResponse
	5,  // 38: messages.Packet.register_request:type_name -> messages.RegisterRequest
	6,  // 39: messages.Packet.register_response:type_name -> messages.RegisterResponse
	7,  // 40: messages.Packet.logout:type_name -> messages.Logout
	8,  // 41: messages.Packet.chat:type_name -> messages.Chat
	9,  // 42: messages.Packet.yell:type_name -> messages.Yell
	10, // 43: messages.Packet.actor:type_name -> messages.Actor
	11, // 44: messages.Packet.actor_move:type_name -> messages.ActorMove
	12, // 45: messages.Packet.motd:type_name -> messages.Motd
	13, // 46: messages.Packet.disconnect:type_name -> messages.Disconnect
	14, // 47: messages.Packet.admin_login_granted:type_name -> messages.AdminLoginGranted
	15, // 48: messages.Packet.sql_query:type_name -> messages.SqlQuery
	17, // 49: messages.Packet.sql_response:type_name -> messages.SqlResponse
	25, // 50: messages.Packet.level_upload:type_name -> messages.LevelUpload
	26, // 51: messages.Packet.level_upload_response:type_name -> messages.LevelUploadResponse
	27, // 52: messages.Packet.level_download:type_name -> messages.LevelDownload
	28, // 53: messages.Packet.admin_join_game_request:type_name -> messages.AdminJoinGameRequest
	29, // 54: messages.Packet.admin_join_game_response:type_name -> messages.AdminJoinGameResponse
	30, // 55: messages.Packet.server_message:type_name -> messages.ServerMessage
	31, // 56: messages.Packet.pickup_ground_item_request:type_name -> messages.PickupGroundItemRequest
	32, // 57: messages.Packet.pickup_ground_item_response:type_name -> messages.PickupGroundItemResponse
	19, // 58: messages.Packet.shrub:type_name -> messages.Shrub
	20, // 59: messages.Packet.ore:type_name -> messages.Ore
	21, // 60: messages.Packet.door:type_name -> messages.Door
	23, // 61: messages.Packet.Item:type_name -> messages.Item
	24, // 62: messages.Packet.ground_item:type_name -> messages.GroundItem
	36, // 63: messages.Packet.actor_inventory:type_name -> messages.ActorInventory
	33, // 64: messages.Packet.drop_item_request:type_name -> messages.DropItemRequest
	34, // 65: messages.Packet.drop_item_response:type_name -> messages.DropItemResponse
	37, // 66: messages.Packet.chop_shrub_request:type_name -> messages.ChopShrubRequest
	38, // 67: messages.Packet.chop_shrub_response:type_name -> messages.ChopShrubResponse
	39, // 68: messages.Packet.mine_ore_request:type_name -> messages.MineOreRequest
	40, // 69: messages.Packet.mine_ore_response:type_name -> messages.MineOreResponse
	35, // 70: messages.Packet.item_quantity:type_name -> messages.ItemQuantity
	41, // 71: messages.Packet.xp_reward:type_name -> messages.XpReward
	42, // 72: messages.Packet.skills_xp:type_name -> messages.SkillsXp
	44, // 73: messages.Packet.interact_with_npc_response:type_name -> messages.InteractWithNpcResponse
	43, // 74: messages.Packet.interact_with_npc_request:type_name -> messages.InteractWithNpcRequest
	45, // 75: messages.Packet.npc_dialogue:type_name -> messages.NpcDialogue
	46, // 76: messages.Packet.buy_request:type_name -> messages.BuyRequest
	47, // 77: messages.Packet.buy_response:type_name -> messages.BuyResponse
	48, // 78: messages.Packet.sell_request:type_name -> messages.SellRequest
	49, // 79: messages.Packet.sell_response:type_name -> messages.SellResponse
	50, // 80: messages.Packet.level_metadata:type_name -> messages.LevelMetadata
	51, // 81: messages.Packet.quest_info:type_name -> messages.QuestInfo
	82, // [82:82] is the sub-list for method output_type
	82, // [82:82] is the sub-list for method input_type
	82, // [82:82] is the sub-list for extension type_name
	82, // [82:82] is the sub-list for extension extendee
	0,  // [0:82] is the sub-list for field type_name
}

func init() { file_messages_proto_init() }
func file_messages_proto_init() {
	if File_messages_proto != nil {
		return
	}
	file_messages_proto_msgTypes[0].OneofWrappers = []any{
		(*Response_Msg)(nil),
	}
	file_messages_proto_msgTypes[51].OneofWrappers = []any{
		(*Packet_ClientId)(nil),
		(*Packet_LoginRequest)(nil),
		(*Packet_LoginResponse)(nil),
		(*Packet_RegisterRequest)(nil),
		(*Packet_RegisterResponse)(nil),
		(*Packet_Logout)(nil),
		(*Packet_Chat)(nil),
		(*Packet_Yell)(nil),
		(*Packet_Actor)(nil),
		(*Packet_ActorMove)(nil),
		(*Packet_Motd)(nil),
		(*Packet_Disconnect)(nil),
		(*Packet_AdminLoginGranted)(nil),
		(*Packet_SqlQuery)(nil),
		(*Packet_SqlResponse)(nil),
		(*Packet_LevelUpload)(nil),
		(*Packet_LevelUploadResponse)(nil),
		(*Packet_LevelDownload)(nil),
		(*Packet_AdminJoinGameRequest)(nil),
		(*Packet_AdminJoinGameResponse)(nil),
		(*Packet_ServerMessage)(nil),
		(*Packet_PickupGroundItemRequest)(nil),
		(*Packet_PickupGroundItemResponse)(nil),
		(*Packet_Shrub)(nil),
		(*Packet_Ore)(nil),
		(*Packet_Door)(nil),
		(*Packet_Item)(nil),
		(*Packet_GroundItem)(nil),
		(*Packet_ActorInventory)(nil),
		(*Packet_DropItemRequest)(nil),
		(*Packet_DropItemResponse)(nil),
		(*Packet_ChopShrubRequest)(nil),
		(*Packet_ChopShrubResponse)(nil),
		(*Packet_MineOreRequest)(nil),
		(*Packet_MineOreResponse)(nil),
		(*Packet_ItemQuantity)(nil),
		(*Packet_XpReward)(nil),
		(*Packet_SkillsXp)(nil),
		(*Packet_InteractWithNpcResponse)(nil),
		(*Packet_InteractWithNpcRequest)(nil),
		(*Packet_NpcDialogue)(nil),
		(*Packet_BuyRequest)(nil),
		(*Packet_BuyResponse)(nil),
		(*Packet_SellRequest)(nil),
		(*Packet_SellResponse)(nil),
		(*Packet_LevelMetadata)(nil),
		(*Packet_QuestInfo)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_messages_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_messages_proto_goTypes,
		DependencyIndexes: file_messages_proto_depIdxs,
		EnumInfos:         file_messages_proto_enumTypes,
		MessageInfos:      file_messages_proto_msgTypes,
	}.Build()
	File_messages_proto = out.File
	file_messages_proto_rawDesc = nil
	file_messages_proto_goTypes = nil
	file_messages_proto_depIdxs = nil
}
